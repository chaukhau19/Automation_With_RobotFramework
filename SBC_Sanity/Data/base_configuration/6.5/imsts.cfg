# Configuration file automatically generated -  Date: 22/08/2017 at 08:20:24
# Original filename </home/etc/imsts.cfg>, 27 sections.


[ _INFO_ ]
"IMTS config file (14/12/06) "
9.400000


[ SOURCE ]
"SRC_MGC1"[] = * , 111
"SRC_MGC2"[] = * , 222
#"SRC_SIPP_A"[] = NAT_NAT , 111010203
#"SRC_SIPP_B"[] = NAT_NAT , 111011101
"*"[] = * , *


[ LOCATION ]
"*"[] = * , *


[ DESTINATION ]
#"Dest_SIPP_A"[] = NAT_NAT , 111011101
#"Dest_SIPP_B"[] = NAT_NAT , 385010203
"Dest_SIPP_A"[] = NAT_NAT , 111010203
"Dest_SIPP_B"[] = NAT_NAT , 111011101
"Dest_SIPP_C"[] = NAT_NAT , 111012609
"Dest_SIPP_D"[] = NAT_NAT , 111012610
"Dest_SIPP_E"[] = NAT_NAT , 111012611
"Dest_SIPP_F"[] = NAT_NAT , 111012612
"Dest_SIPP_G"[] = NAT_NAT , 111012613
"Dest_SIPP_H"[] = NAT_NAT , 111014615
"Dest_MGC1"[] = NAT_NAT , 111
"Dest_MGC2"[] = NAT_NAT , 222
"Dest_INTERNATIONAL"[] = NAT_INTER , *
"Dest_VIETNAM"[] = NAT_INTER , 84
"sda_valid_auto_home"[] = NAT_NAT , 166
"sda_valid_auto_ext"[] = NAT_NAT , 167
"sda_valid_dns_trust"[] = NAT_NAT , 266
"sda_valid_dns_nottrust"[] = NAT_NAT , 267
"sda_valid_dns_nottrust2"[] = NAT_NAT , 367
"*"[] = * , *


[ TIME_SCHEDULE ]
"weekend"[] = friday , 1900 , 2359
"weekend"[] = saturday , 0000 , 2359
"weekend"[] = sunday , 0000 , 2359
"weekend"[] = monday , 0000 , 0800
"worked day"[] = monday_to_friday , 0000 , 2359
"opening hours"[] = monday_to_friday , 0800 , 1800
"week"[] = all_day , 0000 , 2359
"monday"[] = monday , 0000 , 2359
"tuesday"[] = tuesday , 0000 , 2359
"wednesday"[] = wednesday , 0000 , 2359
"thursday"[] = thursday , 0000 , 2359
"friday"[] = friday , 0000 , 2359
"saturday"[] = saturday , 0000 , 2359
"sunday"[] = sunday , 0000 , 2359
"January 1st"[] = 20030101 , * , *
"January 1st"[] = 20040101 , * , *
"January 1st"[] = 20050101 , * , *
"h1_h2"[] = all_day , 0800 , 1259
"not_h1_h2"[] = all_day , 0000 , 0759
"not_h1_h2"[] = all_day , 1300 , 2359
"allday"[] = all_day , 0000 , 2359
"HOUR_1"[] = all_day , 0000 , 2359
"HOUR_2"[] = monday_to_friday , 0000 , 2359
"HOUR_3"[] = 20100101 , * , *
"*"[] = * , * , *


[ CONDITION ]
"publiphone"[] = CPC_PUBLIPHONE
"prioritary_subscr"[] = CPC_PRIORITARY
"ordinary_subscr"[] = CPC_ORDINARY
"operator_call"[] = CPC_OPERATOR
"test_call"[] = CPC_TESTCALL
"data_call"[] = CPC_DATACALL
"special_lang"[] = CPC_SPECLANG
"isdn_subscr"[] = FCI_ORIGISDN
"cnx_satellite"[] = -NCI_0_SATELLITE
"cnx_0_satellite"[] = NCI_0_SATELLITE
"cnx_1_satellite"[] = NCI_1_SATELLITE
"cnx_2_satellite"[] = NCI_2_SATELLITE
"analog_subscr"[] = -FCI_ORIGISDN
"cpc_specific"[] = CPC_0x21 , CPC_12 , CPC_0x34
"international_call"[] = FCI_INTERNATIONAL
"is_visio_call"[] = VISIO_CALL
"tmr_speech"[] = TMR_0x00
"tmr_64k"[] = TMR_2
"tmr_pseudo"[] = TMR_99
"*"[] = *


[ CAUSE ]
"cause_unauthorized"[] = 401 , "BGCF cause : Unauthorized"
"cause_anonymous_via"[] = 403 , "BGCF cause : anonymous VIA / wrong login ..."
"cause_invalid_media"[] = 406 , "BGCF cause : Invalid Media Type"
"cause_auth_required"[] = 407 , "BGCF cause : authentication required"
"cause_proxy_timeout"[] = 408 , "BGCF cause : Proxy Timeout"
"cause_no_route"[] = 491 , "BGCF: No route"
"cause_no_routing_case"[] = 492 , "BGCF: No routing case"
"cause_excluded"[] = 493 , "BGCF: excluded from routing"
"cause_not_available"[] = 480 , "Temporary not available"
"cause_intserv500"[] = 500 , "BGCF cause : Internal Server Error"
"cause_remote502"[] = 502 , "BGCF cause : Bad Gateway"
"cause_remote503"[] = 503 , "BGCF cause : Service Unavailable"
"cause_intserv505"[] = 505 , "BGCF cause : 505"
"noroute484"[] = 484 , "No Route to Destination"


[ CAUSE_GROUP ]
"bgcf_not_routed"[] = cause_no_route
"bgcf_not_routed"[] = cause_no_routing_case
"bgcf_not_routed"[] = cause_excluded
"auth_failed"[] = cause_unauthorized
"auth_failed"[] = cause_anonymous_via
"server_error"[] = cause_intserv500
"server_error"[] = cause_intserv505
"destination_not_reach"[] = cause_proxy_timeout
"destination_not_reach"[] = cause_remote502
"destination_not_reach"[] = cause_remote503
"destination_Busy"[] = cause_busy
"default"[] = dns_error
"default"[] = forking_timeout
"default"[] = porta_timeout
"media"[] = invalid_media
"media"[] = intserv


[ SUBSTITUTION ]
"regex example"[] = * , "^([0-9]{5,5})([37|45])([0-9]{2,2})$" , NAT_NAT , 14144+$2+$3
"regex example"[] = * , "^([0-9]{5,5})([39|43|45])([0-9]{2,2})$" , NAT_NAT , 14145+$2+$3
"AddMarkerAAA"[] = NAT_NAT , "^(.*)$" , NAT_UNKNOWN , AAA+$1
"RemMarkerAAA"[] = NAT_UNKNOWN , "^(AAA)([0-9]*)$" , NAT_NAT , $2
"AddMarkerBBB"[] = NAT_NAT , "^(.*)$" , NAT_UNKNOWN , BBB+$1
"RemMarkerBBB"[] = NAT_UNKNOWN , "^(BBB)([0-9]*)$" , NAT_NAT , $2
"RemPrefixVietnam"[] = NAT_INTER , "^(84)([0-9]*)$" , NAT_NAT , $2


[ SIPTRUNK_GROUP ]
Max_10 = 10
Max_20 = 20
Max_300 = 300


[ OUTGOING_SIPTRUNK ]
"SIPTRK_TO_SIPP_A"[] = TPIP_BORDER , PEER_SIPP_A 
"SIPTRK_TO_SIPP_B"[] = TPIP_CORE , PEER_SIPP_B
"SIPTRK_TO_SIPP_C"[] = TPIP_CORE , PEER_SIPP_C
"SIPTRK_TO_SIPP_D"[] = TPIP_BORDER , PEER_SIPP_D
"SIPTRK_TO_SIPP_E"[] = TPIP_CORE , PEER_SIPP_E
"SIPTRK_TO_SIPP_F"[] = TPIP_CORE , PEER_SIPP_F
"SIPTRK_TO_SIPP_G"[] = TPIP_CORE , PEER_SIPP_G
"SIPTRK_TO_SIPP_H"[] = TPIP_CORE , PEER_SIPP_H
"out_valid_auto_home"[] = TPIP_BORDER , valid_auto_home
"out_valid_auto_ext"[] = TPIP_CORE , valid_auto_ext
"out_valid_dns_trust"[] = tpip_in , valid_dns_trust
"out_valid_dns_nottrust"[] = tpip_out , valid_dns_nottrust
"out_valid_dns_nottrust2"[] = tpip_out , valid_dns_nottrust2


[ INCOMING_SIPTRUNK ]
"SIPTRK_FROM_SIPP_A"[] = TPIP_BORDER , PEER_SIPP_A , RG_BORDER_TO_SIPP
"SIPTRK_FROM_SIPP_B"[] = TPIP_CORE , PEER_SIPP_B , RG_CORE_TO_SIPP
"SIPTRK_FROM_SIPP_C"[] = TPIP_CORE , PEER_SIPP_C , RG_CORE_TO_SIPP
"SIPTRK_FROM_SIPP_D"[] = TPIP_BORDER , PEER_SIPP_D , RG_BORDER_TO_SIPP
"SIPTRK_FROM_SIPP_E"[] = TPIP_CORE , PEER_SIPP_E , RG_CORE_TO_SIPP
"SIPTRK_FROM_SIPP_F"[] = TPIP_CORE , PEER_SIPP_F , RG_CORE_TO_SIPP
"SIPTRK_FROM_SIPP_G"[] = TPIP_CORE , PEER_SIPP_G , RG_CORE_TO_SIPP
"SIPTRK_FROM_SIPP_H"[] = TPIP_CORE , PEER_SIPP_H , RG_CORE_TO_SIPP
"default"[] = * , * , RG_MAIN_TO_CORE


[ RG_MAIN_TO_CORE ]
"sectiontype"[] = ROUTING_GROUP
"default"[] = FAILED , cause_no_routing_case


[ RG_MAIN_TO_BORDER ]
sectiontype = ROUTING_GROUP
"case"[] = "toward SIPP H" , * , * , Dest_SIPP_H , * , * , * , NO_PORTABILITY , RP_TO_SIPP_H
"default"[] = FAILED , cause_no_routing_case


[ RG_BORDER_TO_SIPP ]
"sectiontype"[] = ROUTING_GROUP
"case"[] = "toward SIPP B" , * , * ,Dest_SIPP_B , * , * , * , NO_PORTABILITY, RP_TO_SIPP_B
"case"[] = "toward SIPP C" , * , * ,Dest_SIPP_C , * , * , * , NO_PORTABILITY, RP_TO_SIPP_C
"case"[] = "toward SIPP E" , * , * ,Dest_SIPP_E , * , * , * , NO_PORTABILITY, RP_TO_SIPP_E
"case"[] = "toward SIPP F" , * , * ,Dest_SIPP_F , * , * , * , NO_PORTABILITY, RP_TO_SIPP_F
"case"[] = "toward SIPP G" , * , * ,Dest_SIPP_G , * , * , * , NO_PORTABILITY, RP_TO_SIPP_G
"default"[] = FAILED , cause_no_routing_case


[ RG_CORE_TO_SIPP ]
"sectiontype"[] = ROUTING_GROUP
"case"[] = "toward SIPP A" , * , * , Dest_SIPP_A, * , * , * , NO_PORTABILITY, RP_TO_SIPP_A
"case"[] = "toward SIPP D" , * , * , Dest_SIPP_D, * , * , * , NO_PORTABILITY, RP_TO_SIPP_D
"default"[] = FAILED , cause_no_routing_case


[ RP_TO_SIPP_A ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = SIPTRK_TO_SIPP_A , "to SIPP_A via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_A , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_TO_SIPP_B ]
"sectiontype"[] = ROUTING_PROGRAM
"maxreselect"[] = 2
"reselect"[] = cause_proxy_timeout , RP_TO_SIPP_B
"route"[] = SIPTRK_TO_SIPP_B , "to SIPP_B via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_B , NO_PORTABILITY , *
"route"[] = SIPTRK_TO_SIPP_B , "to SIPP_B via IBCF" , * , 100 , 2 , 100 , RP_TO_SIPP_B , NO_PORTABILITY , *
"reselect"[] = cause_remote503 , RP_TO_SIPP_C
"default"[] = FAILED , cause_no_route


[ RP_TO_SIPP_C ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = SIPTRK_TO_SIPP_C , "to SIPP_C via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_C , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_TO_SIPP_D ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = SIPTRK_TO_SIPP_D , "to SIPP_D via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_D , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_TO_SIPP_E ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = SIPTRK_TO_SIPP_E , "to SIPP_E via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_E , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_TO_SIPP_F ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = SIPTRK_TO_SIPP_F , "to SIPP_F via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_F , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_TO_SIPP_G ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = SIPTRK_TO_SIPP_G , "to SIPP_G via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_G , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route

[ RP_TO_SIPP_H ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = SIPTRK_TO_SIPP_H , "to SIPP_H via IBCF" , * , 100 , 1 , 100 , RP_TO_SIPP_H , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route

[ RP_valid_auto_home ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = out_valid_auto_home , "via bgcf" , * , 100 , 1 , 100 , CK , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_valid_auto_ext ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = out_valid_auto_ext , "via ibcf" , * , 100 , 1 , 100 , CK , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_valid_dns_trust ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = out_valid_dns_trust , "via bgcf" , * , 100 , 1 , 100 , CK , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_valid_dns_nottrust ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = out_valid_dns_nottrust , "via ibcf" , * , 100 , 1 , 100 , CK , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route


[ RP_valid_dns_nottrust2 ]
"sectiontype"[] = ROUTING_PROGRAM
"route"[] = out_valid_dns_nottrust2 , "via ibcf" , * , 100 , 1 , 100 , CK , NO_PORTABILITY , *
"default"[] = FAILED , cause_no_route